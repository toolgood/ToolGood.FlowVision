@page
@model ToolGood.FlowVision.Pages.Members.Apps.Input.EditModel
@{
	Layout = "~/Pages/Shared/_Layout_Edit.cshtml";
}
@section css{
	<style>
		.layui-table td, .layui-table th { padding: 3px; }
		.layui-form-item .layui-form-checkbox[lay-skin=primary] { margin-top: 5px; margin-bottom: 5px; }
		.editor { top: 0; bottom: 0; left: 0; width: 100%; height: 100%; }
		.ace_text-layer .ace_rightAlignedText .ace-cjk { font-size: 12px !important; }
		div.layui-input.editor-div { padding: 0; height: initial }
		div.layui-input.editor-div2 { padding: 0; display: inline-block; width: calc(100% - 38px); height: initial }
	</style>
}

	<div style="overflow-x:hidden;background-color:#f3f3f4;height: 100%;">
		<form id="edit-form" style="height: 100%;">
			<input type="hidden" name="id" value="@Model.Dto.Id" />
			<input type="hidden" name="ProjectId" value="@Model.Dto.ProjectId" />
			@Html.AntiForgeryToken()
			<div class="layui-form layui-form-sm" lay-filter="form" style="padding: 20px 30px 0 0;">
				<div class="layui-form-item-sm">
					<label class="layui-form-label-sm">流程名称<span class="red"> *</span></label>
					<div class="layui-input-block-sm">
					@foreach (var app in Model.Apps) {
						<input type="checkbox" name="AppIds[]" lay-skin="primary" value="@(app.Id)" title="@(app.Name)" @(Model.AppIds.Contains(app.Id).ToChecked()) />
					}
				</div>
			</div>
			<div class="layui-form-item-sm">
				<label class="layui-form-label-sm">输入项<span class="red"> *</span></label>
				<div class="layui-input-block-sm">
					<input type="text" class="layui-input layui-input-sm" id="txt_InputName" name="InputName" value="@Model.Dto.InputName" autocomplete="off">
				</div>
			</div>

			<div class="layui-form-item-sm">
				<label class="layui-form-label-sm">输入类型</label>
				<div class="layui-input-block-sm">
					<input type="checkbox" name="InputType" lay-skin="primary" value="number" title="数字" lay-filter="type" @(Model.Dto.InputType.ToCheckedWhenIs("number")) />
					<input type="checkbox" name="InputType" lay-skin="primary" value="bool" title="布尔值" lay-filter="type" @(Model.Dto.InputType.ToCheckedWhenIs("bool")) />
					<input type="checkbox" name="InputType" lay-skin="primary" value="string" title="文本" lay-filter="type" @(Model.Dto.InputType.ToCheckedWhenIs("string")) />
					<input type="checkbox" name="InputType" lay-skin="primary" value="date" title="时间" lay-filter="type" @(Model.Dto.InputType.ToCheckedWhenIs("date")) />
					<input type="checkbox" name="InputType" lay-skin="primary" value="list" title="集合" lay-filter="type" @(Model.Dto.InputType.ToCheckedWhenIs("list")) />
				</div>
			</div>
			<div class="layui-form-item-sm">
				<label class="layui-form-label-sm">单位</label>
				<div class="layui-input-block-sm">
					<input type="text" class="layui-input  layui-input-sm" id="txt_Unit" name="Unit" value="@Model.Dto.Unit" autocomplete="off" style="width: 120px;display: inline-block;margin-right:15px;">
					<input type="checkbox" name="IsRequired" lay-skin="primary" value="true" title="输入必填"  @(Model.Dto.IsRequired.ToChecked()) />
					<input type="checkbox" name="UseDefaultValue" lay-skin="primary" value="true" title="使用默认值:" @(Model.Dto.UseDefaultValue.ToChecked()) />
					<input type="text" class="layui-input layui-input-sm" id="txt_DefaultValue" name="DefaultValue" value="@Model.Dto.DefaultValue" style="width: 120px;display: inline-block;">
				</div>
			</div>

			<div class="layui-form-item-sm" style=" margin-bottom: 6px;">
				<label class="layui-form-label-sm">检查输入</label>
				<div class="layui-input-block-sm">
					<input type="hidden" id="txt_CheckInput" name="CheckInput" value="@Model.Dto.CheckInput" />
					<div class="layui-input editor-div">
						<div id="txt_CheckInput-editor" class="editor"> </div>
					</div>
				</div>
			</div>
	 

			<div class="layui-form-item-sm">
				<label class="layui-form-label-sm">抛错信息</label>
				<div class="layui-input-block-sm">
					<input type="text" class="layui-input layui-input-sm" id="txt_ErrorMessage" name="ErrorMessage" value="@Model.Dto.ErrorMessage" autocomplete="off">
				</div>
			</div>

			<div class="layui-form-item-sm">
				<label class="layui-form-label-sm">备注</label>
				<div class="layui-input-block-sm">
					<textarea class="layui-textarea layui-textarea-sm" id="txt_Comment" name="Comment">@(Model.Dto.Comment.ToHtml())</textarea>
				</div>
			</div>

			<div class="layui-form-item-sm" style="text-align:center;padding-left: 30px;">
				<button type="button" class="layui-btn layui-btn-sm layui-btn-normal" onclick="save(this);"> &nbsp;&nbsp; 提 交 &nbsp;&nbsp; </button>
				<button type="button" class="layui-btn layui-btn-sm layui-btn-primary" onclick="closeWindow();"> &nbsp;&nbsp; 关 闭 &nbsp;&nbsp; </button>
			</div>
		</div>
	</form>
</div>
@section js{
	<script src="/_/inputcontrol/toolgood.algorithm.js"></script>
	<script src="/_/inputcontrol/ace/ace.js"></script>
	<script src="/_/inputcontrol/ace/ext-language_tools.js"></script>
	<script src="/_/inputcontrol/AceKeywords.js?pid=@(Model.Dto.ProjectId)"></script>
	<script src="/_/inputcontrol/my-keywords.js"></script>
	<script src="/_/inputcontrol/createeditor.js"></script>
	<script>
		layui.use(['element', 'form'], function () {
			var form = layui.form;
			form.on('checkbox(type)', function (data) {
				$("input[name='InputType']").prop("checked", false);
				$(this).prop("checked", true);
				form.render('checkbox');
			});
			form.render('checkbox');
		});
	</script>
	<script>
		$(function () {
			createEditor("txt_CheckInput-editor", "txt_CheckInput")
		})
		function save(obj) {
			if ($("#txt_AppId").val() == 0) { layer.alert("请选择流程"); return; }
			if ($("#txt_InputType").val() == "") { layer.alert("请选择输入类型"); return; }
			if ($("#txt_InputName").val().length < 1) { layer.alert("请输入输入项"); $("#txt_InputName").focus(); return; }

			var name = $("#txt_InputName").val().toLowerCase();
			if (/^[\d].*/ig.test(name)) { layer.alert("输入项有误"); $("#txt_InputName").focus(); return; }
			if (/[ \t\+\-\*\/\(\)\\\[\]]/ig.test(name)) { layer.alert("输入项有误"); $("#txt_InputName").focus(); return; }
			for (var i = 0; i < ace_keywords2.length; i++) {
				if (ace_keywords2[i]["key"].toLowerCase() == name) { layer.alert("输入项有误,不能使用当前变量名"); $("#txt_InputName").focus(); return; }
			}

			$(obj).prop("disabled", true);
			var url = "./Ajax/EditItem";
			var data = {
				data: $("#edit-form").serializeJson(),
				fingerprint: window.fingerprint
			}
			data.data.AppIds = data.data.AppIds.join(",");
			$.ajax({
				type: "POST",
				url: url,
				contentType: "application/json;charset=UTF-8",
				data: JSON.stringify(data),
				headers: { __RequestVerificationToken: data.data["__RequestVerificationToken"] },
				dataType: "JSON",
				success: function (data, textStatus, jqXHR) {
					if (data.state == "SUCCESS") {
						closeWindowAndReload();
					} else {
						$(obj).prop("disabled", false);
						if (data.message) {
							layer.msg(data.message);
						} else {
							layer.msg("出错了");
						}
					}
				},
				error: function (data, textStatus, errorThrown) { $(obj).prop("disabled", false); layer.msg("出错了"); }
			});


		}
	</script>
}